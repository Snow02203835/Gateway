server:
  port: 8088
other-ip: localhost:9999
order-ip:
  order: localhost:8084
  payment: localhost:8085
  freight: localhost:8083
gateway:
  activity: http://localhost:8988
  goods: http://localhost:8907
  falshsale: http://localhost:8188

dubbo:
  # 配置服务信息
  application:
    name: privilege-gateway
    # 禁用QOS同一台机器可能会有端口冲突现象
    qos-enable: false
    qos-accept-foreign-ip: false
  # 配置注册中心
  registry:
    address: nacos://localhost:8848
  # 设置协议-协议由提供方指定消费方被动接受
  protocol:
    name: dubbo
    port: 20880
    # 设置超时时间
  consumer:
    timeout: 4000
    check: false

spring:
  application:
    name: privilege-gateway
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - HEAD
              - OPTIONS
      routes:
        - id: login
          uri: http://localhost:8086/
          predicates:
            - Path=/adminusers,/privileges/login, /adminusers/login
          filters:
            - PrefixPath=/privilege

        - id: user
          uri: http://localhost:8090/
          predicates:
            - Path=/users/login, /users/**
          filters:
            - PrefixPath=/user

        - id: admin-freight
          uri: http://${order-ip.freight}
          predicates:
            - Path=/region/{rid}/price, /shops/{id}/freightmodels, /shops/{shopId}/pieceItems/{id}, /shops/{shopId}/weightItems/{id}, /shops/{shopId}/freightmodels/{id}, /shops/{shopId}/freightmodels/{id}/clone, /shops/{shopId}/freightmodels/{id}/default, /shops/{shopId}/freightmodels/{id}/pieceItems, /shops/{shopId}/freightmodels/{id}/weightItems
          filters:
            - PrefixPath=/freight
            - Auth=authorization

        - id: all-order
          uri: http://${order-ip.order}
          predicates:
            - Path=/orders/states
          filters:
            - PrefixPath=/order

        - id: auth-order
          uri: http://${order-ip.order}
          predicates:
            - Path=/orders, /orders/{id}, /orders/{id}/confirm, /shops/{shopId}/orders, /orders/{id}/groupon-normal, /shops/{shopId}/orders/{id}, /shops/{shopId}/orders/{id}/deliver
          filters:
            - PrefixPath=/order
            - Auth=authorization

        - id: all-payment
          uri: http://${order-ip.payment}
          predicates:
            - Path=/payments/states, /payments/patterns
          filters:
            - PrefixPath=/payment

        - id: auth-refund
          uri: http://${order-ip.payment}
          predicates:
            - Path=/orders/{id}/refunds, /aftersales/{id}/refunds, /shops/{shopId}/orders/{id}/refunds, /shops/{shopId}/payments/{id}/refunds, /shops/{shopId}/aftersales/{id}/refunds
          filters:
            - Auth=authorization
            - PrefixPath=/payment

        - id: auth-payment
          uri: http://${order-ip.payment}
          predicates:
            - Path=/orders/{id}/payments, /aftersales/{id}/payments, /shops/{shopId}/orders/{id}/payments, /shops/{shopId}/aftersales/{id}/payments
          filters:
            - Auth=authorization
            - PrefixPath=/payment

  redis:
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码
    password: 123456
    # Redis数据库索引（默认为0）
    database: 0
    #连接池最大连接数（使用负值表示没有限制）
    lettuce:
      pool:
        max-active: 100
        # 连接池中的最大空闲连接
        max-idle: 100
        # 连接池中的最小空闲连接
        min-idle: 0
        #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
    # 连接超时时间（毫秒）
    timeout: 5000


management:
  endpoint:
    gateway:
      enabled: true

# 配置rocketmq
rocketmq:
  # 指定namesrv地址
  name-server: 172.16.1.87:9876
  producer:
    #生产者group名称
    group: producer_group
    #一次发送多少数量消息
    max-message-size: 4096
    #发送消息超时时间,默认3000
    send-message-timeout: 3000
    #发送消息失败重试次数，默认2
    retry-times-when-send-async-failed: 2

# 网关token相关配置
privilegegateway:
  jwtExpire: 3600
  refreshJwtTime: 60
